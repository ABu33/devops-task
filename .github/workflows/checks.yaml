name: Pull Request Workflow
on: 
  pull_request:
    branches:
      - master
jobs:
  python:
    runs-on: ubuntu-20.04
    steps:
      -
        uses: actions/checkout@v3
      -
        name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.4"
      -
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
      -
        name: Lint with flake8
        run: |
          flake8 helloapp --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 helloapp --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      -
        name: Test with pytest
        run: |
          pytest -v helloapp/test.py
  helm:
    runs-on: ubuntu-20.04
    steps:
      -
        uses: actions/checkout@v3
      - 
        name: Lint and validate helm
        uses: stefanprodan/kube-tools@v1
        with:
          helmv3: 3.9.0
          kubeval: v0.16.1
          command: |
            echo "Lint chart"
            helmv3 lint ./helloapp-chart/
            echo "Run kubeval"
            helmv3 template ./charts/test | kubeval --strict
  docker:
    runs-on: ubuntu-20.04
    steps:
      -
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push as dev image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: abu33/helloapp:dev-${{ github.sha }}
      -
        name: Scan image for vulnerabilities
        uses: Azure/container-scan@v0
        with:
          image-name: abu33/helloapp:dev-${{ github.sha }}
          run-quality-checks: false
